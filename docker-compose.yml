version: '3.9'

services:
  backend:
    build: ./backend-dustbin
    ports:
      - "3333:3333"
    networks:
      - mongo-net
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: dustbin

    ports:
      - "3310:3310"
    networks:
      - mongo-net

  redis:
    image: redis:bullseye
    ports:
      - "6379:6379"
    networks:
      - mongo-net

  mongo1:
    image: mongo:5
    container_name: mongo1
    command:
      [
        "--replSet",
        "my-replica-set",
        "--bind_ip_all",
        "--port",
        "30001"
      ]
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - 30001:30001
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    networks:
      - mongo-net

  mongo2:
    image: mongo:5
    container_name: mongo2
    command:
      [
        "--replSet",
        "my-replica-set",
        "--bind_ip_all",
        "--port",
        "30002"
      ]
    volumes:
      - ./data/mongo-2:/data/db
    ports:
      - 30002:30002
    networks:
      - mongo-net

  mongo3:
    image: mongo:5
    container_name: mongo3
    command:
      [
        "--replSet",
        "my-replica-set",
        "--bind_ip_all",
        "--port",
        "30003"
      ]
    volumes:
      - ./data/mongo-3:/data/db
    ports:
      - 30003:30003
    networks:
      - mongo-net

networks:
  mongo-net:
    driver: bridge
